/*
    자주 사용하는 디자인 코드들을 보관한 뒤 불러온다
*/

/* 초기화 디자인(reset style) */

/*여백 없애기*/
html,
body {
    margin: 0;
    padding: 0;
}

/*내용물 기준이 아닌(content) 테두리 기준으로 폭이 계산되도록*/
* {
    box-sizing: border-box;
}





/*
        1rem : 글자 1개의 세로 크기와 동일
        (일반 px로 padding을 설정하면 글자크기가 달라졌을때 어색해진다
        커서가 놓여져있는 글자 크기는 기본 1rem이다)
*/

.table {
    width: 100%;
    border-spacing: 0;
}

/*
        그냥 th,td라고 표기하면 태그 자체를 수정하게된다=>비효율적
        .table안에 있는 th와 td에만 효과를 부여하고싶다
        
        연계 선택자 : 특정 태그를 기준으로 연관된 태그를 선택하는 것
        
        .table>thead>tr>th (직계 자식 탐색)
            : class=table 바로밑 thead 바로밑 tr 바로밑 th선택
        .table th (후손 탐색)
            : class=table안에 있는 모든 th
             ㄴ사용x 왜? table안에 다른 table이 있는 경우에 그 테이블의 th까지 찾아내니까
*/
.table > thead > tr > th,
.table > thead > tr > td,
.table > tbody > tr > td,
.table > tbody > tr > td,
.table > tfoot > tr > td,
.table > tfoot > tr > td

/*범위가 좁은 설정일수록 강하다!*/
    {
    font-size: 20px;
    padding: 0.5rem;
    text-align: center;

}

/*테두리 부여 확장 스타일*/
.table.table-border {
    border: 1px solid black;
    /*테두리를 합쳐주는 속성*/
    border-collapse: collapse;
}

.table.table-border > thead > tr > th,
.table.table-border > thead > tr > td,
.table.table-border > tbody > tr > td,
.table.table-border > tbody > tr > td,
.table.table-border > tfoot > tr > td,
.table.table-border > tfoot > tr > td {
    border: 1px solid black;
}

/*
        줄무늬 확장 스타일
        :bth-child()에는 패턴 지정이 가능(1n,2n...)
*/
.table.table-pattern > thead > tr {
    background-color: black;
    color: white;
}

.table.table-pattern > tbody > tr:nth-child(2n-2) {
    background-color: lightgray;
}

/*
       커서 강조 효과 부여 
*/
.table.table-hightlight > tbody > tr:hover {
    background-color: antiquewhite;
}

/*
        가로줄 테두리 스타일
        :not()으로 원치않는 상황을 뺄 수 있다
        :first-child, :last-child로 첫번째와 마지막을 선택할 수 있다
*/
.table.table-horizontal > tbody > tr > th,
.table.table-horizontal > tbody > tr > td {
    border-bottom: 1px solid black;
}

.table.table-horizontal > tbody > tr:last-child > th,
.table.table-horizontal > tbody > tr:last-child > td {
    border-bottom: none;
}

.table.table-horizontal {
    border-top: 5px double black;
    border-bottom: 5px double black;
}

.table.table-horizontal > tfoot > tr:first-child > th,
.table.table-horizontal > tfoot > tr:first-child > td {
    border-top: 5px solid black;
}

.table.table-horizontal > thead > tr:last-child > th,
.table.table-horizontal > thead > tr:last-child > td {
    border-bottom: 5px solid black;
}

/*
        내부 정렬 스타일
        !important를 붙이면 우선순위가 올라감!
        (어더한 방법으로도 바꿀 수 없을 때만 사용)
*/
.left {
    text-align: left !important;
}

.center {
    text-align: center !important;
}

.right {
    text-align: right !important;
}





/*
        
        입력창 스타일(input(다수..), select(콤보박스), textarea(여러줄))
        
        공용스타일 : .input
        확장스타일 : 
        -밑줄만 쳐지는 입렵창 : .input-underline
        -100%가 아닌 입력창 : .input-inline
        -하이라이트 입력창 : .input-hightlight
        -좌측에 그림이 들어가는 입력창 : .input-hint
        
        */
        .input{
            width: 100%;
            padding: 0.5rem;
            outline: none;/*기본적으로는 선택할 때 테두리가 칠해짐*/
            border:1px solid gray;
        }
        .input.input-underline{/*박스형이 아닌 아래 줄만 쳐져있는 형태*/
            border: none;
            border-bottom: 3px solid black;
        }
        .input.input-inline{/*크기를 자동으로 작게 설정*/
            width:auto;
        }
        /*focus는 선택한 경우에 대한 스타일 적용 기능*/
        .input.input-hightlight:focus{
            border-color:red;
        }
        .input.input-hint{
            padding-left: 2.5rem;
        }
        /* 모든 textarea의 크기변경을 수직으로만 변경 설정*/
        textarea{
            resize:vertical;
        }



/*
    레이아웃 작성 규칙!
    1.바깥쪽에 class="outbox"를 배치한다
    2.안쪽에 필요한 줄 수 를 세어 class="row"를 배치한다
    3.만들어야 할 컴포넌트를 배치한 후 스타일링한다
    4.class="outbox"의 폭을 설정한다

*/
        .outbox {
            width:350px;
            margin:0 auto;
        }
        .outbox > .row {
            margin:0.5rem 0;
        }